시간 복잡도

알고리즘이 주어진 문제를 해결할 때, 입력 데이터의 크기가 증가하면 실행 시간이 어떻게 변하는지를 나타낸다.
보통 "입력의 크기( n )" 가 커질 때 알고리즘이 수행하는 연산의 수를 기준으로 설명한다.

효율적인 알고리즘 선택 	: 동일한 문제를 해결하는 여러 알고리즘 중에서 어떤 것이 더 효율적인지 판단할 수 있다.
성능 예측					: 데이터가 많아질 때, 실행 시간이 얼마나 늘어날 지 예측할 수 있어 시스템 설계와 자원 배분에 도움이 된다.


1. Big-O 표기법
Big-O는 알고리즘의 최악의 경우를 가정하여, 입력이 커질 때의 실행 시간을 단순화해서 표현한다.

대표적인 Big-O 표기법
• O(1) 상수 시간
	: 입력 크기와 상관없이 항상 일정한 시간이 걸린다. 
	: ex. 배열의 특정 인덱스에 접근하는 경우

• O(n) 선형 시간
	: 입력 크기에 비례하여 시간이 증가한다.
	: ex. 배열에서 특정 값을 찾기 위해 처음부터 끝까지 하나씩 확인하는 선형 검색.