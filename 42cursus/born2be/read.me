this subject need 42 link, and have to learn virtual box.

25.1.17, ~crontab, finish

25.1.18
have to do list
[] 본투비 기반 개념들 research,
[] 평가 지침서 정독, 분석, 필요한 정보 find, 
[] virtualbox 명령어 정리, (암기)

do list
born2be-mandatory

[ ] 가상머신이 어떻게 작동하는가
>
• Host machine
• Hypervisor
• Guest Machine, Guest OS
• Virtual Hardware

- Host Machine
가상머신을 실제로 구동할 물리 컴퓨터를 의미. CPU, Memory, Disk 등의 실제 하드웨어 자원이 존재함

- Hypervisor
가상머신을 생성,관리하는 소프트웨어 계층으로, 물리 하드웨어와 가상머신 (OS 및 애플리케이션) 사이에서 자원의 사용을 조율한다.

∘ Type1(네이티브, 베어메탈) 하이퍼바이저 : 물리머신 위에 직접 설치되어 동작한다. 
∘ Type2(호스트 기반) 하이퍼바이저 : 호스트 OS위에 설치되어 동작한다. 

- Guest Machine
가상머신에 설치된 운영체제를 말한다. 게스트 OS는 호스트 머신의 하드웨어가 아닌, 하이퍼바이저가 가상으로 제공하는 하드웨어를 사용한다.


- Virtual Hardware
cpu, memory, 저장장치, NIC 등의 자원을 가상화해서 게스트 OS가 마치 실제 하드웨어처럼 접근할 수 있도록 한다.





[ ] 자신이 선택한 운영체제( OS )는 무엇이며, 왜 그 OS를 선택했는지

Windows, macOS, Linux, IOS&Android, 기타/특수 목적 OS

windows는 폭넓은 소프트웨어 호환성이 장점임.
macOS는 연동성이 뛰어남. unix 기반
Linux는 오픈소스 커널을 기반으로 하는 다양한 배포판이 존재. 서버, 슈퍼컴퓨터, 임베디드 기기 등 다양한 용도에서 활용되고, 커뮤니티 생태계가 매우 활발함


세 OS의 특징이고, 이 중에서 windows를 고른다고 하면, 호환성이 장점이지만 라이센스 제약이 많고 트러블슈팅이 까다로움
macOS와 Linux 중 서버운영과 관련된 문서, 가이드, 커뮤니티가 더 풍부한 Linux를 선택한다.

macOS는 apple 연동성이 뛰어나지만 해당 하드웨어가 필수적이기 때문.

또한 Linux는 서버나 클라우드 환경에서 가장 널리 사용되기 때문.




[ ] Rocky와 Debian의 차이점



25.1.19

[ ] Rocky와 Debian의 차이점

rocky 	- 주로 기업 환경에 사용될 목적, 비교적 복잡한 GUI, 제한된 수의 공식 패키지, Red Hat 커뮤니티에서 주로 지원
debian - 넓은 사용자 베이스를 위한 일반 용도, 사용자 친화적인 GUI 및 응용 프로그램, 방대한 양의 패키지 보유, 주로 개인 및 자원봉사자 커뮤니티에서 지원




[ ] 가상머신의 목적
>
하드웨어 자원을 가상화하여, 여러개의 독립된 컴퓨터 환경을 한 물리머신 위에서 운용할 수 있게 하는 것

이를 통해
1. 자원 효율성 - 한대의 물리 서버 위에서 여러 운영체제를 동시에 구동, cpu, memory, disk 등 자원을 효율적으로 활용할 수 있음

2. 격리(독립성) - 가상머신마다 고유한 환경을 가추어 서로 영향을 주지 않도록 격리한다. 한 가상머신이 다운되거나 문제가 생겨도 다른 가상머신이나 호스							
				    트 서버에 영향을 최소화할 수 있음

3. 유연한 개발, 테스트 환경 - 다양한 운영체제와 소프트웨어 스택을 동일 물리 서버에 빠르게 설치,삭제,재구성할 수 있어서 개발 및 테스트 환경을 쉽게 구
								축하고 복제할 수 있음

4. 비용 절감 - 서버 통합을 통해 물리적인 하드웨어 수를 줄이고, 운용,전력,공간 비용을 절감할 수 있음

5. 백업 및 복구 용이성 - VM 이미지를 스냅샷 또는 파일 형태로 간편하게 백업하고, 문제가 생기면 스냅샷 시점으로 쉽게 복구할 수 있음

6. 보안성 및 격리 - 민감한 애플리케이션을 별도의 VM에 격리하여 보안성을 높이거나, 실험적인 소프트웨어를 분리된 공간에서 테스트할 수 있어 위험을 
 					최소화할 수 있음

7. 클라우드 컴퓨팅 기반 - 퍼블릭, 프라이빗 클라우드 서비스의 핵심 기술로서, 온디맨드(필요 시 확장/축소) 인프라 제공이 가능해짐


결국, 가상머신의 목적은 물리 하드웨어를 가상화해 독립적인 시스템 환경을 효율적으로 운용할 수 있도록 함으로써, 
IT 자원을 보다 유연하고 안정적이며 경제적으로 관리,활용하기 위함임




[ ] (Debian을 선택한 경우) aptitude와 apt의 차이점, 그리고 APPArmor가 무엇인지

aptitude : 
• 초창기부터 존재하던 패키지 관리자
• 명령줄 기반뿐 아니라, 텍스트 사용자 인터페이스(TUI)를 제공해, 메뉴를 통해 설치, 제거, 검색 등을 직관적으로 관리할 수 있음
• 의존성 해결(Dependencies) 로직이 뛰어나며, 다양한 설정 옵션을 갖추고 있음


apt : 
• Debian8 무렵부터 등장한 새로운 통합 인터페이스임
• 기존에 분리되어 있던 apt-get, apt-cache 등의 기능을 좀 더 단순화/통합하여 사용자 친화적인 명령어를 제공하고자 만들어졌음
• CLI 환경에서의 사용 편의를 강화하고 출력 메시지를 좀 더 보기 좋게 정돈함


aptitude = 고급 사용자용, 텍스트 기반 UI 제공, 더 세밀하고 강력한 의존성 해결 능력
apt		   = 모던하고 간결한 CLI 명렁어 집합(가장 많이 쓰이는 형태), 일상적 시스템 관리에 적합




AppAmor : Application Armor, 리눅스 보안을 강화하기 위한 강제 접근 제어(MAC : Mandatory Access Control)시스템 중 하나임

어플리케이션에 대한 파일 접근 권한, 네트워크 액세스, 시스템콜 등을 plicy로 정의하여, 해당 프로세스가 허용되지 않은 자원에 접근하지 못하도록 제한한다. 

>>'경로 기반 MAC 시스템으로, 프로세스별로 "어떤 경로에 접근할 수 있는지"를 정책(프로필)으로 정의해 보안을 강화하는 리눅스 커널 기능이다.'




|===============|=========================|================================|============================|

SIMPLE SETUP

[ ] GUI(그래픽 환경) 비활성화

초기 부팅 시 그래픽 환경이 실행되지 않아야 하며, **CLI 모드(텍스트 콘솔)**로 시작되어야 합니다.


cli모드 = 그래픽 환경을 사용하지 않고 문자 기반 터미널을 통해 운영체제를 조작하는 방식을 말한다.




[ ] 접속 전 비밀번호 요구

가상머신에 SSH나 콘솔로 접속할 때, 사용자 인증(비밀번호 입력)이 필수여야 합니다.
즉, 비밀번호 없이 자동 로그인되는 설정은 안 됩니다.



[ ] 루트 사용자가 아닌 다른 사용자로 로그인

root 계정으로 직접 로그인하는 것이 아닌, 별도의 일반 사용자 계정으로 접속해야 합니다.
이 계정은 평가 대상 학생이 접속(도움)을 줄 때 사용하는 계정입니다.

passwd -e username		: 비밀번호 만료기간 강제 적용, 다음 로그인 시 비밀번호를 변경해야함.
sudo chage -d $(date +%F) username		: 만료상태 취소.


[ ] 사용자 비밀번호 규칙 준수

과제에서 요구하는 비밀번호 복잡도(길이, 문자 종류, 만료 규칙 등) 정책을 따라야 합니다.
일반적으로 대문자·소문자·숫자·특수문자 조합 및 최소 길이를 설정합니다.

vim /etc/pam.d/common-pasword

retry : 다시시도 횟수
minlen : 최소 길이
ucredit : 대문자 개수, -1은 최소 1개의 대문자 포함요구
dcredit : 숫자 개수, -2는 최소 2개
maxrepeat : 문자 반복 허용 개수, 3은 3개까지는 허용, 4개부터 거부
reject_username : 비밀번호에 username이 포함되면 거부
enforce_for_root : 루트 사용자에게도 동일한 비밀번호 정책을 강제 적용
difok : 이전 비밀번호와 얼마나 달라야 하는지, 4일 경우, 최소 4개의 문자가 달라야 함.




[ ] UFW(데비안) 혹은 Firewalld(록키) 서비스 활성화

데비안을 선택했다면 UFW가 활성화되어야 하고,
Rocky Linux를 선택했다면 Firewalld가 활성화되어야 합니다.
각각 현재 상태(sudo ufw status, sudo systemctl status firewalld)를 확인하세요.


Debian : sudo ufw status
Rocky 	 : sudo systemctl status firewalld



 [ ] SSH 서비스 활성화

원격 접속 테스트를 위해 SSH 서비스가 켜져 있어야 합니다.
명령어 예시: systemctl status ssh (Debian 계열) / systemctl status sshd (RHEL 계열)


Debian : systemctl status ssh
Rocky	: systemctl status sshd



[ ] 운영체제 확인

Debian 또는 Rocky Linux 중 어떤 OS인지 확인해야 합니다.
예)
Debian: /etc/os-release 파일에서 ID=debian 또는 PRETTY_NAME="Debian ..." 등을 확인
Rocky: /etc/os-release에 ID="rocky" 혹은 NAME="Rocky Linux" 등이 표시됨


cat /etc/os-release




|===============|=========================|================================|============================|

User(사용자)

[ ] 과제에서 요구하는대로, 평가대상 학생의 아이디("id")로 된 사용자가 가상머신 안에 존재하는지 확인해라.
그리고 이 사용자가 "sudo"와 "user42" 그룹에 속해 있는지도 확인해라
>>
(sudo) groupadd user42 							== user42 라는 이름의 그룹을 만든다.
(sudo) usermod -aG sudo,user42 (사용자 이름) 	== 지정한 사용자를 sudo, user42라는 그룹에 추가한다. sudo 명령어를 사용할 수 있게됨, 해당 그룹에 			
														대한 접근 권한을 부여받는다.
(sudo) usermod -g user42 (사용자 이름)			== 지정한 사용자의 기본(주) 그룹을 user42로 변경한다.



[ ] 비밀번호 정책 : 과제에서 요구하는 패스워드 정책이 적용되었는지 확인해야한다.
1. 새 사용자를 만들어라 : 과제 규칙을 준수하는 비밀번호를 임의로 설정해라.
2. 평가대상 학생에게, 이 패스워드 정책을 VM 내에서 어떻게 설정했는지 설명하도록 요청해라. 
>>
만들어질 때 잘못 만들어진다면 (crontab의 영향을 받아 작업이 이상해진다면)

getent passwd				: 모든 사용자 정보 확인
sudo deluser (사용자 이름)	: 지정한 사용자 계정을 삭제
sudo deluser --remove-home (사용자 이름) : 홈 디렉토리와 메일 스풀 등도 함께 삭제.


[ ] 사용자 만들기
groups (사용자 이름) : 사용자 그룹 확인

sudo adduser (사용자 이름)
sudo groupadd evaluating : evaluating이라는 그룹을 만든다.
sudo usermod -aG evaluating (사용자 이름) : 지정한 사용자를 evaluating 그룹에 추가한다.


[ ] 비밀번호 정책의 장점과 단점
>>
장점 : 강력한 비밀번호 정책은 무작위 대입 공격이나 사전 공격에 대한 보안 강화, 사용자 계정 보호
단점 : 복잡한 비밀번호는 사용자의 기억 부담 증가, 비밀번호 재설정 빈도 상승, 관리 비용 증가





|===============|=========================|================================|============================|
Hostname and partitions

[ ] 



